{"version":3,"sources":["Components/TodoHeader.js","Components/TodoForm.js","Components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["TodoHeader","react_default","a","createElement","className","href","TodoForm","_ref","addTodo","_React$useState","React","useState","_React$useState2","Object","slicedToArray","value","setValue","onSubmit","e","preventDefault","type","placeholder","onChange","target","Todo","todo","index","completeTodo","removeTodo","style","textDecoration","isCompleted","text","onClick","App","todos","setTodos","newTodos","toConsumableArray","splice","Components_TodoHeader","Components_TodoForm","concat","map","Components_Todo","key","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.412a0d40.chunk.js","sourcesContent":["import React from 'react'\r\nimport './TodoHeader.css'\r\nfunction TodoHeader() {\r\n    return (\r\n        <div className=\"TodoHeader\">\r\n            <h2>TODO App</h2>\r\n            <p>By <a href=\"https://www.linkedin.com/in/gunnala-pranav-reddy-7a230b1b0/\">Pranav Reddy Gunnala</a></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoHeader;","import React from 'react'\r\nimport './TodoForm.css'\r\nfunction TodoForm({ addTodo }) {\r\n    const [value, setValue] = React.useState(\"\");\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (!value) return;\r\n        addTodo(value);\r\n        setValue(\"\");\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                placeholder=\"Enter your task\"\r\n                value={value}\r\n                onChange={e => setValue(e.target.value)}\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TodoForm;","import React from 'react';\r\nimport './Todo.css';\r\n\r\nfunction Todo({ todo, index, completeTodo, removeTodo }) {\r\n    return (\r\n        <div\r\n            className=\"todo\"\r\n            style={{ textDecoration: todo.isCompleted ? \"line-through\" : \"\" }}\r\n        >\r\n            {todo.text}\r\n            <div className=\"buttons\">\r\n                <div className=\"complete\" onClick={() => completeTodo(index)}>Complete</div>\r\n                <div className=\"incomplete\" onClick={() => removeTodo(index)}>x</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from 'react'\nimport TodoHeader from './Components/TodoHeader';\nimport TodoForm from './Components/TodoForm';\nimport Todo from './Components/Todo';\nimport './App.css';\n\nfunction App() {\n  const [todos, setTodos] = React.useState([\n    {\n      text: \"Learn about React\",\n      isCompleted: false\n    },\n    {\n      text: \"Meet friend for lunch\",\n      isCompleted: false\n    },\n    {\n      text: \"Build really cool todo app\",\n      isCompleted: false\n    }\n  ]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = true;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"App\">\n      <TodoHeader />\n      <TodoForm addTodo={addTodo} />\n      <div className=\"todo-list\">\n        {todos.map((todo, index) => (\n          <Todo\n            key={index}\n            index={index}\n            todo={todo}\n            completeTodo={completeTodo}\n            removeTodo={removeTodo}\n          />\n        ))}\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}